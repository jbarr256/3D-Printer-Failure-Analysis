import {
  __commonJS
} from "./chunk-ROME4SDB.js";

// node_modules/vue-toast-notification/dist/index.min.js
var require_index_min = __commonJS({
  "node_modules/vue-toast-notification/dist/index.min.js"(exports, module) {
    !function(t, e) {
      "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define("VueToast", [], e) : "object" == typeof exports ? exports.VueToast = e() : t.VueToast = e();
    }(exports, () => (() => {
      "use strict";
      var t = { d: (e2, s2) => {
        for (var o2 in s2)
          t.o(s2, o2) && !t.o(e2, o2) && Object.defineProperty(e2, o2, { enumerable: true, get: s2[o2] });
      }, o: (t2, e2) => Object.prototype.hasOwnProperty.call(t2, e2) }, e = {};
      t.d(e, { default: () => l });
      class s {
        constructor(t2, e2) {
          this.startedAt = Date.now(), this.callback = t2, this.delay = e2, this.timer = setTimeout(t2, e2);
        }
        pause() {
          this.stop(), this.delay -= Date.now() - this.startedAt;
        }
        resume() {
          this.stop(), this.startedAt = Date.now(), this.timer = setTimeout(this.callback, this.delay);
        }
        stop() {
          clearTimeout(this.timer);
        }
      }
      const o = Object.freeze({ TOP_RIGHT: "top-right", TOP: "top", TOP_LEFT: "top-left", BOTTOM_RIGHT: "bottom-right", BOTTOM: "bottom", BOTTOM_LEFT: "bottom-left" });
      const i = { all: n = n || /* @__PURE__ */ new Map(), on: function(t2, e2) {
        var s2 = n.get(t2);
        s2 ? s2.push(e2) : n.set(t2, [e2]);
      }, off: function(t2, e2) {
        var s2 = n.get(t2);
        s2 && (e2 ? s2.splice(s2.indexOf(e2) >>> 0, 1) : n.set(t2, []));
      }, emit: function(t2, e2) {
        var s2 = n.get(t2);
        s2 && s2.slice().map(function(t3) {
          t3(e2);
        }), (s2 = n.get("*")) && s2.slice().map(function(s3) {
          s3(t2, e2);
        });
      } };
      var n;
      var a = function(t2, e2, s2, o2, i2, n2, a2, r2) {
        var c2, l2 = "function" == typeof t2 ? t2.options : t2;
        if (e2 && (l2.render = e2, l2.staticRenderFns = s2, l2._compiled = true), o2 && (l2.functional = true), n2 && (l2._scopeId = "data-v-" + n2), a2 ? (c2 = function(t3) {
          (t3 = t3 || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) || "undefined" == typeof __VUE_SSR_CONTEXT__ || (t3 = __VUE_SSR_CONTEXT__), i2 && i2.call(this, t3), t3 && t3._registeredComponents && t3._registeredComponents.add(a2);
        }, l2._ssrRegister = c2) : i2 && (c2 = r2 ? function() {
          i2.call(this, (l2.functional ? this.parent : this).$root.$options.shadowRoot);
        } : i2), c2)
          if (l2.functional) {
            l2._injectStyles = c2;
            var u = l2.render;
            l2.render = function(t3, e3) {
              return c2.call(e3), u(t3, e3);
            };
          } else {
            var p = l2.beforeCreate;
            l2.beforeCreate = p ? [].concat(p, c2) : [c2];
          }
        return { exports: t2, options: l2 };
      }({ name: "toast", props: { message: { type: String, required: true }, type: { type: String, default: "success" }, position: { type: String, default: o.BOTTOM_RIGHT, validator: (t2) => Object.values(o).includes(t2) }, duration: { type: Number, default: 3e3 }, dismissible: { type: Boolean, default: true }, onDismiss: { type: Function, default: () => {
      } }, onClick: { type: Function, default: () => {
      } }, queue: Boolean, pauseOnHover: { type: Boolean, default: true } }, data: () => ({ isActive: false, parentTop: null, parentBottom: null, isHovered: false }), beforeMount() {
        this.setupContainer();
      }, mounted() {
        this.showNotice(), i.on("toast-clear", this.dismiss);
      }, methods: { setupContainer() {
        if (this.parentTop = document.querySelector(".v-toast.v-toast--top"), this.parentBottom = document.querySelector(".v-toast.v-toast--bottom"), this.parentTop && this.parentBottom)
          return;
        this.parentTop || (this.parentTop = document.createElement("div"), this.parentTop.className = "v-toast v-toast--top"), this.parentBottom || (this.parentBottom = document.createElement("div"), this.parentBottom.className = "v-toast v-toast--bottom");
        const t2 = document.body;
        t2.appendChild(this.parentTop), t2.appendChild(this.parentBottom);
      }, shouldQueue() {
        return !!this.queue && (this.parentTop.childElementCount > 0 || this.parentBottom.childElementCount > 0);
      }, dismiss() {
        this.timer && this.timer.stop(), clearTimeout(this.queueTimer), this.isActive = false, setTimeout(() => {
          var t2;
          this.onDismiss.apply(null, arguments), this.$destroy(), void 0 !== (t2 = this.$el).remove ? t2.remove() : t2.parentNode.removeChild(t2);
        }, 150);
      }, showNotice() {
        this.shouldQueue() ? this.queueTimer = setTimeout(this.showNotice, 250) : (this.correctParent.insertAdjacentElement("afterbegin", this.$el), this.isActive = true, this.duration && (this.timer = new s(this.dismiss, this.duration)));
      }, whenClicked() {
        this.dismissible && (this.onClick.apply(null, arguments), this.dismiss());
      }, toggleTimer(t2) {
        this.pauseOnHover && this.timer && (t2 ? this.timer.pause() : this.timer.resume());
      } }, computed: { correctParent() {
        switch (this.position) {
          case o.TOP:
          case o.TOP_RIGHT:
          case o.TOP_LEFT:
            return this.parentTop;
          case o.BOTTOM:
          case o.BOTTOM_RIGHT:
          case o.BOTTOM_LEFT:
            return this.parentBottom;
        }
      }, transition() {
        switch (this.position) {
          case o.TOP:
          case o.TOP_RIGHT:
          case o.TOP_LEFT:
            return { enter: "v-toast--fade-in-down", leave: "v-toast--fade-out" };
          case o.BOTTOM:
          case o.BOTTOM_RIGHT:
          case o.BOTTOM_LEFT:
            return { enter: "v-toast--fade-in-up", leave: "v-toast--fade-out" };
        }
      } }, beforeDestroy() {
        i.off("toast-clear", this.dismiss);
      } }, function() {
        var t2 = this, e2 = t2._self._c;
        return e2("transition", { attrs: { "enter-active-class": t2.transition.enter, "leave-active-class": t2.transition.leave } }, [e2("div", { directives: [{ name: "show", rawName: "v-show", value: t2.isActive, expression: "isActive" }], staticClass: "v-toast__item", class: ["v-toast__item--".concat(t2.type), "v-toast__item--".concat(t2.position)], attrs: { role: "alert" }, on: { mouseover: function(e3) {
          return t2.toggleTimer(true);
        }, mouseleave: function(e3) {
          return t2.toggleTimer(false);
        }, click: t2.whenClicked } }, [e2("div", { staticClass: "v-toast__icon" }), t2._v(" "), e2("p", { staticClass: "v-toast__text", domProps: { innerHTML: t2._s(t2.message) } })])]);
      }, [], false, null, null, null);
      const r = a.exports, c = function(t2) {
        let e2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
        return { open(s2) {
          let o2;
          "string" == typeof s2 && (o2 = s2);
          const i2 = { message: o2 }, n2 = Object.assign({}, i2, e2, s2);
          return new (t2.extend(r))({ el: document.createElement("div"), propsData: n2 });
        }, clear() {
          i.emit("toast-clear");
        }, success(t3) {
          let e3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          return this.open(Object.assign({}, { message: t3, type: "success" }, e3));
        }, error(t3) {
          let e3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          return this.open(Object.assign({}, { message: t3, type: "error" }, e3));
        }, info(t3) {
          let e3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          return this.open(Object.assign({}, { message: t3, type: "info" }, e3));
        }, warning(t3) {
          let e3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          return this.open(Object.assign({}, { message: t3, type: "warning" }, e3));
        }, default(t3) {
          let e3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          return this.open(Object.assign({}, { message: t3, type: "default" }, e3));
        } };
      };
      r.install = function(t2) {
        let e2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, s2 = c(t2, e2);
        t2.$toast = s2, t2.prototype.$toast = s2;
      };
      const l = r;
      return e = e.default;
    })());
  }
});
export default require_index_min();
//# sourceMappingURL=vue-toast-notification.js.map
